{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riano\\\\Documents\\\\Javier\\\\NextJsKiosco\\\\componentes\\\\LoginFormulario.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PlantillaG from './PlantillaG';\nimport { Button } from '@material-ui/core';\nimport fetch from 'isomorphic-unfetch';\nimport { OK, FORBIDDEN, INTERNAL_SERVER_ERROR } from 'http-status-codes';\nimport { connect } from 'react-redux';\nconst stylebutton = {\n  background: \"#e95a0c\",\n  borderRadius: 3,\n  border: 0,\n  color: 'white',\n  width: '100%',\n  height: 48,\n  padding: '0 10px',\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  // marginLeft: 20,\n  marginTop: 5 // marginRight: 20\n\n};\n\nclass LoginFormulario extends Component {\n  static getInitialProps({\n    store,\n    isServer,\n    pathname,\n    query\n  }) {\n    store.dispatch({\n      type: 'DO_LOGIN',\n      value: null\n    }); // component will be able to read from store's state when rendered\n\n    return {\n      custom: 'custom'\n    }; // you can pass some custom props to component from here\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isloged: this.props.isloged,\n      usuario: \"\",\n      pass: \"\"\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlepasswordChange = this.handlepasswordChange.bind(this);\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      usuario: event.target.value\n    });\n  }\n\n  handlepasswordChange(event) {\n    this.setState({\n      pass: event.target.value\n    });\n  }\n\n  _login(data) {\n    return fetch('https://transcar.appspot.com/usuarios/login', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(\"Reponse\" + JSON.stringify(res));\n      return res;\n    }).catch(err => err);\n  }\n\n  handlelogin() {\n    //var HttpStatus = require('http-status-codes');\n    var _userdata = {\n      user_passwd: this.state.usuario + \"_\" + this.state.pass\n    };\n\n    this._login(_userdata).then(res => {\n      console.log(res);\n\n      if (res.status == 201) {\n        const action = {\n          type: \"DO_LOGIN\",\n          value: true\n        };\n        this.props.dispatch(action);\n        console.log(\"Usuario logeado ok\");\n      }\n\n      if (res.status == FORBIDDEN) {\n        console.log(\"Error pasword\");\n        const action = {\n          type: \"DO_LOGIN\",\n          value: false\n        };\n        this.props.dispatch(action);\n      }\n\n      if (res.status == INTERNAL_SERVER_ERROR) {\n        const action = {\n          type: \"DO_LOGIN\",\n          value: false\n        };\n        this.props.dispatch(action);\n        console.log(\"usuario no existe\");\n      }\n\n      return res;\n    }).catch(err => err);\n  }\n\n  render() {\n    return __jsx(PlantillaG, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Inicio de sesion para el acceso a la BD \"), __jsx(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Usuario\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: this.state.usuario,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Contrase\\xF1a\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"password\",\n      value: this.state.pass,\n      onChange: this.handlepasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(Button, {\n      variant: \"contained\",\n      style: stylebutton,\n      onClick: this.handlelogin.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"iniciar sesion\"))))));\n  }\n\n}\n\nexport default connect(state => state)(LoginFormulario);","map":{"version":3,"sources":["C:/Users/Riano/Documents/Javier/NextJsKiosco/componentes/LoginFormulario.js"],"names":["React","Component","PlantillaG","Button","fetch","OK","FORBIDDEN","INTERNAL_SERVER_ERROR","connect","stylebutton","background","borderRadius","border","color","width","height","padding","boxShadow","marginTop","LoginFormulario","getInitialProps","store","isServer","pathname","query","dispatch","type","value","custom","constructor","props","state","isloged","usuario","pass","handleNameChange","bind","handlepasswordChange","event","setState","target","_login","data","method","body","JSON","stringify","headers","then","res","console","log","catch","err","handlelogin","_userdata","user_passwd","status","action","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PlantillaG from './PlantillaG';\r\nimport { Button } from '@material-ui/core';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { OK, FORBIDDEN, INTERNAL_SERVER_ERROR } from 'http-status-codes';\r\nimport { connect } from 'react-redux'\r\n\r\nconst stylebutton = {\r\n    background: \"#e95a0c\",\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    width : '100%',\r\n    height: 48,\r\n    padding: '0 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n   // marginLeft: 20,\r\n    marginTop: 5,\r\n   // marginRight: 20\r\n  };\r\n  \r\nclass LoginFormulario extends Component {\r\n    static getInitialProps({store, isServer, pathname, query}) {\r\n        store.dispatch({type: 'DO_LOGIN', value:null\r\n        }); // component will be able to read from store's state when rendered\r\n        return {custom: 'custom'}; // you can pass some custom props to component from here\r\n    }\r\n    constructor(props){\r\n       super(props) \r\n       this.state={\r\n           isloged: this.props.isloged,\r\n           usuario : \"\",\r\n           pass : \"\"\r\n       }\r\n       this.handleNameChange = this.handleNameChange.bind(this);\r\n       this.handlepasswordChange = this.handlepasswordChange.bind(this);\r\n    \r\n    }\r\n    handleNameChange(event) { \r\n        this.setState({usuario: event.target.value});\r\n      }\r\n      handlepasswordChange(event) {  \r\n        this.setState({pass: event.target.value});\r\n      }\r\n      _login(data) {\r\n        return fetch('https://transcar.appspot.com/usuarios/login', {\r\n            method: 'POST',\r\n             \r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n           console.log(\"Reponse\" + JSON.stringify(res))\r\n            return res;\r\n        }).catch(err => err);\r\n    }\r\n      handlelogin(){\r\n        //var HttpStatus = require('http-status-codes');\r\n        var _userdata = {user_passwd:this.state.usuario+\"_\"+this.state.pass}\r\n        this._login(_userdata).then(res =>{\r\n         console.log(res)\r\n         if(res.status == 201){\r\n            const action = { type: \"DO_LOGIN\", value:true}\r\n\r\n            this.props.dispatch(action);\r\n        \r\n\r\n             console.log(\"Usuario logeado ok\")\r\n         }\r\n         if(res.status == FORBIDDEN){\r\n             console.log(\"Error pasword\")\r\n             const action = { type: \"DO_LOGIN\", value:false}\r\n\r\n            this.props.dispatch(action);\r\n        \r\n         }\r\n         if(res.status == INTERNAL_SERVER_ERROR){\r\n          const action = { type: \"DO_LOGIN\", value:false}\r\n\r\n          this.props.dispatch(action);\r\n      \r\n             console.log(\"usuario no existe\")\r\n         }\r\n         return res\r\n\r\n        }\r\n        ).catch(err => err);\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <PlantillaG>\r\n            <h2>Inicio de sesion para el acceso a la BD </h2>\r\n            <table>\r\n           <tbody>\r\n             <tr>\r\n               <th>\r\n                Usuario\r\n               </th>\r\n               <th>\r\n           <input type=\"text\" value={this.state.usuario} onChange={this.handleNameChange} />\r\n               \r\n               </th>\r\n             </tr>\r\n         \r\n            \r\n        \r\n             <tr>\r\n               <th>\r\n                Contraseña \r\n               </th>\r\n               <th>\r\n               <input type=\"password\" value={this.state.pass} onChange={this.handlepasswordChange} />\r\n               </th>\r\n             </tr>\r\n             <tr >\r\n               <th><Button variant=\"contained\"  style={stylebutton} onClick={this.handlelogin.bind(this)}>iniciar sesion</Button>\r\n               </th>\r\n             </tr>\r\n           </tbody>\r\n         </table>\r\n          </PlantillaG>\r\n   \r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => state,\r\n  )(LoginFormulario);"]},"metadata":{},"sourceType":"module"}