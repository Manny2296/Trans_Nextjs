{"ast":null,"code":"var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _defineProperty = require(\"@babel/runtime-corejs2/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  isloged: false\n};\n\nfunction doLogin() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var nextstate;\n\n  switch (action.type) {\n    case 'DO_LOGIN':\n      nextState = _objectSpread({}, state, {\n        isloged: action.value\n      });\n      return nextState || state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/p/NextJsKiosco/store/reducers/LoginReducer.js"],"names":["initialState","isloged","doLogin","state","action","nextstate","type","nextState","value"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,SAASC,OAAT,GAA6C;AAAA,MAA5BC,KAA4B,uEAApBH,YAAoB;AAAA,MAAPI,MAAO;AACzC,MAAIC,SAAJ;;AACA,UAAOD,MAAM,CAACE,IAAd;AACI,SAAK,UAAL;AACAC,MAAAA,SAAS,qBACFJ,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACI;AAFX,QAAT;AAIA,aAAOD,SAAS,IAAIJ,KAApB;;AAEJ;AACG,aAAOA,KAAP;AATH;AAYH","sourcesContent":["const initialState = {\r\n    isloged: false\r\n}\r\n\r\nfunction doLogin(state = initialState,action){\r\n    let nextstate;\r\n    switch(action.type){\r\n        case 'DO_LOGIN': \r\n        nextState={\r\n            ...state,\r\n            isloged: action.value\r\n        }\r\n        return nextState || state;\r\n\r\n    default:\r\n       return state;\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"script"}