{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\p\\\\NextJsKiosco\\\\pages\\\\transacciones.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport PlantillaG from '../componentes/PlantillaG';\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { forwardRef } from 'react';\nimport fetch from 'isomorphic-unfetch';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => __jsx(AddBox, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))),\n  Check: forwardRef((props, ref) => __jsx(Check, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))),\n  Clear: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))),\n  Delete: forwardRef((props, ref) => __jsx(DeleteOutline, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))),\n  DetailPanel: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))),\n  Edit: forwardRef((props, ref) => __jsx(Edit, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))),\n  Export: forwardRef((props, ref) => __jsx(SaveAlt, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))),\n  Filter: forwardRef((props, ref) => __jsx(FilterList, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))),\n  FirstPage: forwardRef((props, ref) => __jsx(FirstPage, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))),\n  LastPage: forwardRef((props, ref) => __jsx(LastPage, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))),\n  NextPage: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))),\n  PreviousPage: forwardRef((props, ref) => __jsx(ChevronLeft, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))),\n  ResetSearch: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))),\n  Search: forwardRef((props, ref) => __jsx(Search, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))),\n  SortArrow: forwardRef((props, ref) => __jsx(ArrowDownward, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => __jsx(Remove, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))),\n  ViewColumn: forwardRef((props, ref) => __jsx(ViewColumn, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })))\n};\n\nclass transacciones extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        title: \"Id Transaccion\",\n        field: \"id_transaccion\"\n      }, {\n        title: \"Tipo de Transaccion\",\n        field: \"tipo_transaccion\"\n      }, {\n        title: \"Valor Transaccion\",\n        field: \"valor_transaccion\"\n      }, {\n        title: \"Valor Recarga\",\n        field: \"valor_recarga\"\n      }, {\n        title: \"Fecha\",\n        field: \"fecha\"\n      }, {\n        title: \"Hora\",\n        field: \"hora\"\n      }, {\n        title: \"No. Tarjeta\",\n        field: \"idtarjeta\"\n      }, {\n        title: \"Nombre Maquina\",\n        field: \"nobremaquina\"\n      }, {\n        title: \"IP Maquina\",\n        field: \"ipmaquina\"\n      }],\n      transacciones: []\n    };\n\n    this._loadTransacciones();\n  }\n\n  async _loadTransacciones() {\n    const res = await fetch('http://localhost:3001/transaccion/');\n    const data = await res.json(); //console.log(`Show data fetched. Count: ${data.length}`  );\n\n    this.setState({\n      transacciones: [...this.state.transacciones, ...data] // une autre sintaxys  films: this.state.films.concat(data.results)\n      // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\n\n    }); //  console.log(\"Rowsusu\"+this.state.numRows)\n  }\n\n  render() {\n    return __jsx(PlantillaG, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(MaterialTable, {\n      icons: tableIcons,\n      title: \"Kioscos Transcaribe\",\n      columns: this.state.columns,\n      data: this.state.transacciones,\n      actions: [{\n        icon: AccountCircleIcon,\n        tooltip: 'Ver Detalle',\n        onClick: (event, rowData) => //alert(\"You saved \" + rowData.name)window.location.href\n        window.location.href = `/user/${rowData.ndoc}`\n      }],\n      editable: {\n        /* onRowAdd: newData =>\r\n           new Promise(resolve => {\r\n             setTimeout(() => {\r\n               resolve();\r\n               this.setState(prevState => {\r\n                 const data = [...prevState.data];\r\n                 data.push(newData);\r\n                 return { ...prevState, data };\r\n               });\r\n             }, 600);\r\n           }),\r\n         onRowUpdate: (newData, oldData) =>\r\n           new Promise(resolve => {\r\n             setTimeout(() => {\r\n               resolve();\r\n               if (oldData) {\r\n                 this.setState(prevState => {\r\n                   const data = [...prevState.data];\r\n                   data[data.indexOf(oldData)] = newData;\r\n                   return { ...prevState, data };\r\n                 });\r\n               }\r\n             }, 600);\r\n           }),*/\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            this.setState(prevState => {\n              const data = [...prevState.data];\n              data.splice(data.indexOf(oldData), 1);\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }, 600);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default transacciones;","map":{"version":3,"sources":["C:/Users/p/NextJsKiosco/pages/transacciones.js"],"names":["React","Component","PlantillaG","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","AccountCircleIcon","forwardRef","fetch","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","transacciones","constructor","state","columns","title","field","_loadTransacciones","res","data","json","setState","render","icon","tooltip","onClick","event","rowData","window","location","href","ndoc","onRowDelete","oldData","Promise","resolve","setTimeout","prevState","splice","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PlantillaG from '../componentes/PlantillaG';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { forwardRef } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    \r\n  };\r\nclass transacciones extends Component {\r\n    constructor(props){\r\n    \r\n        super(props)\r\n  \r\n         this.state = { \r\n           columns:[{title:\"Id Transaccion\", field:\"id_transaccion\"},\r\n               {title:\"Tipo de Transaccion\", field:\"tipo_transaccion\"},\r\n               {title:\"Valor Transaccion\", field:\"valor_transaccion\"},\r\n               {title:\"Valor Recarga\", field:\"valor_recarga\"},\r\n               {title:\"Fecha\", field:\"fecha\"},\r\n               {title:\"Hora\", field:\"hora\"},\r\n               {title:\"No. Tarjeta\", field:\"idtarjeta\"},\r\n               {title:\"Nombre Maquina\", field:\"nobremaquina\"},\r\n               {title:\"IP Maquina\", field:\"ipmaquina\"},\r\n               \r\n                      \r\n\r\n\r\n  \r\n          ],\r\n          transacciones :[]\r\n          \r\n        \r\n    }\r\n    this._loadTransacciones()\r\n  \r\n      }\r\n      async _loadTransacciones(){\r\n        const res = await fetch('http://localhost:3001/transaccion/');\r\n        const data = await res.json();\r\n        \r\n        //console.log(`Show data fetched. Count: ${data.length}`  );\r\n        \r\n     \r\n        this.setState(\r\n          { \r\n            transacciones: [...this.state.transacciones, ...data],  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n           // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n         \r\n           \r\n          }\r\n        )\r\n      //  console.log(\"Rowsusu\"+this.state.numRows)\r\n      }\r\n    render() {\r\n        return (\r\n            <PlantillaG>\r\n                          <MaterialTable\r\n       icons={tableIcons}\r\n      title=\"Kioscos Transcaribe\"\r\n      columns={this.state.columns}\r\n      data={this.state.transacciones}\r\n      actions={[\r\n        {\r\n          icon: AccountCircleIcon,\r\n          tooltip: 'Ver Detalle',\r\n          onClick: (event, rowData) => //alert(\"You saved \" + rowData.name)window.location.href\r\n          window.location.href = `/user/${rowData.ndoc}`\r\n           \r\n        }\r\n       ]}\r\n      editable={{\r\n       /* onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              this.setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                this.setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),*/\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              this.setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />  \r\n            </PlantillaG>\r\n        );\r\n    }\r\n}\r\n\r\nexport default transacciones;"]},"metadata":{},"sourceType":"module"}