{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\p\\\\NextJsKiosco\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport PlantillaG from '../componentes/PlantillaG';\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { forwardRef } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Button } from '@material-ui/core';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => __jsx(AddBox, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))),\n  Check: forwardRef((props, ref) => __jsx(Check, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))),\n  Clear: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))),\n  Delete: forwardRef((props, ref) => __jsx(DeleteOutline, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))),\n  DetailPanel: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))),\n  Edit: forwardRef((props, ref) => __jsx(Edit, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))),\n  Export: forwardRef((props, ref) => __jsx(SaveAlt, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))),\n  Filter: forwardRef((props, ref) => __jsx(FilterList, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))),\n  FirstPage: forwardRef((props, ref) => __jsx(FirstPage, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))),\n  LastPage: forwardRef((props, ref) => __jsx(LastPage, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))),\n  NextPage: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))),\n  PreviousPage: forwardRef((props, ref) => __jsx(ChevronLeft, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))),\n  ResetSearch: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))),\n  Search: forwardRef((props, ref) => __jsx(Search, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))),\n  SortArrow: forwardRef((props, ref) => __jsx(ArrowDownward, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => __jsx(Remove, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))),\n  ViewColumn: forwardRef((props, ref) => __jsx(ViewColumn, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))\n};\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        title: \"Id Maquina\",\n        field: \"id_maquina\"\n      }, {\n        title: \"Nombre Maquina\",\n        field: \"nombre\"\n      }, {\n        title: \"Ip Maquina\",\n        field: \"ip_maquina\"\n      }, {\n        title: \"No Tarjetas\",\n        field: \"n_tarjetas\"\n      }],\n      maquinas: [],\n      islogin: false\n    };\n\n    this._loadMaquinas();\n  }\n\n  async _loadMaquinas() {\n    const res = await fetch('http://localhost:3001/maquinas/');\n    const data = await res.json(); //console.log(`Show data fetched. Count: ${data.length}`  );\n\n    this.setState({\n      maquinas: [...this.state.maquinas, ...data] // une autre sintaxys  films: this.state.films.concat(data.results)\n      // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\n\n    }); //  console.log(\"Rowsusu\"+this.state.numRows)\n  }\n\n  render() {\n    if (!this.state.islogin) {\n      return __jsx(PlantillaG, {\n        loginstate: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Inicio de sesion para el acceso a la BD \"), __jsx(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Usuario\"), __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.handleNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Contrase\\xF1a\"), __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"password\",\n        onChange: this.handlepasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"iniciar sesion\")))));\n    } else {\n      return __jsx(PlantillaG, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, __jsx(MaterialTable, {\n        icons: tableIcons,\n        title: \"Kioscos Transcaribe\",\n        columns: this.state.columns,\n        data: this.state.maquinas,\n        actions: [{\n          icon: AccountCircleIcon,\n          tooltip: 'Ver Detalle',\n          onClick: (event, rowData) => //alert(\"You saved \" + rowData.name)window.location.href\n          window.location.href = `/user/${rowData.ndoc}`\n        }],\n        editable: {\n          /* onRowAdd: newData =>\r\n             new Promise(resolve => {\r\n               setTimeout(() => {\r\n                 resolve();\r\n                 this.setState(prevState => {\r\n                   const data = [...prevState.data];\r\n                   data.push(newData);\r\n                   return { ...prevState, data };\r\n                 });\r\n               }, 600);\r\n             }),\r\n           onRowUpdate: (newData, oldData) =>\r\n             new Promise(resolve => {\r\n               setTimeout(() => {\r\n                 resolve();\r\n                 if (oldData) {\r\n                   this.setState(prevState => {\r\n                     const data = [...prevState.data];\r\n                     data[data.indexOf(oldData)] = newData;\r\n                     return { ...prevState, data };\r\n                   });\r\n                 }\r\n               }, 600);\r\n             }),*/\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              this.setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }, 600);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/p/NextJsKiosco/pages/index.js"],"names":["React","Component","PlantillaG","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","AccountCircleIcon","forwardRef","fetch","Button","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","Index","constructor","state","columns","title","field","maquinas","islogin","_loadMaquinas","res","data","json","setState","render","handleNameChange","handlepasswordChange","icon","tooltip","onClick","event","rowData","window","location","href","ndoc","onRowDelete","oldData","Promise","resolve","setTimeout","prevState","splice","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PlantillaG from '../componentes/PlantillaG';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { forwardRef } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Button } from '@material-ui/core';\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    \r\n  };\r\nclass Index extends Component {\r\n    constructor(props){\r\n    \r\n        super(props)\r\n  \r\n         this.state = { \r\n           columns:[{title:\"Id Maquina\", field:\"id_maquina\"},\r\n               {title:\"Nombre Maquina\", field:\"nombre\"},\r\n               {title:\"Ip Maquina\", field:\"ip_maquina\"},\r\n               {title:\"No Tarjetas\", field:\"n_tarjetas\"}\r\n  \r\n          ],\r\n          maquinas :[],\r\n          islogin : false\r\n          \r\n         \r\n    }\r\n    this._loadMaquinas()\r\n  \r\n      }\r\n\r\n\r\n      async _loadMaquinas(){\r\n        const res = await fetch('http://localhost:3001/maquinas/');\r\n        const data = await res.json();\r\n        \r\n        //console.log(`Show data fetched. Count: ${data.length}`  );\r\n        \r\n     \r\n        this.setState(\r\n          { \r\n            maquinas: [...this.state.maquinas, ...data],  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n           // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n         \r\n           \r\n          }\r\n        )\r\n      //  console.log(\"Rowsusu\"+this.state.numRows)\r\n      }\r\n    render() {\r\n\r\n      if(!this.state.islogin){\r\n        return(\r\n          <PlantillaG loginstate={false}>\r\n            <h2>Inicio de sesion para el acceso a la BD </h2>\r\n            <table>\r\n           \r\n           <tbody>\r\n             <tr>\r\n               <th>\r\n                Usuario\r\n               </th>\r\n               <th>\r\n           <input type=\"text\"  onChange={this.handleNameChange} />\r\n               \r\n               </th>\r\n             </tr>\r\n         \r\n            \r\n        \r\n             <tr>\r\n               <th>\r\n                Contraseña \r\n               </th>\r\n               <th>\r\n               <input type=\"password\" onChange={this.handlepasswordChange} />\r\n               </th>\r\n             </tr>\r\n             <tr>\r\n               <Button>iniciar sesion</Button>\r\n             </tr>\r\n           </tbody>\r\n         </table>\r\n         \r\n          </PlantillaG>\r\n \r\n        )\r\n      }\r\n\r\n      else{\r\n\r\n        return (\r\n          <PlantillaG>\r\n               <MaterialTable\r\n       icons={tableIcons}\r\n      title=\"Kioscos Transcaribe\"\r\n      columns={this.state.columns}\r\n      data={this.state.maquinas}\r\n      actions={[\r\n        {\r\n          icon: AccountCircleIcon,\r\n          tooltip: 'Ver Detalle',\r\n          onClick: (event, rowData) => //alert(\"You saved \" + rowData.name)window.location.href\r\n          window.location.href = `/user/${rowData.ndoc}`\r\n           \r\n        }\r\n       ]}\r\n      editable={{\r\n       /* onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              this.setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                this.setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),*/\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              this.setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />  \r\n          </PlantillaG>\r\n        );\r\n\r\n\r\n      }\r\n       \r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}