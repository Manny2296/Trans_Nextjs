{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\p\\\\NextJsKiosco\\\\pages\\\\maquina\\\\[nombre].js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport PlantillaG from '../../componentes/PlantillaG';\nimport fetch from 'isomorphic-unfetch';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport '../../componentes/styles/nombre.scss';\nimport Keyboard from 'react-simple-keyboard'; //import '../../componentes/styles/index.css'\n\nvar textinputdisabled = {\n  background: '#e0e0e0',\n  borderRadius: 3,\n  fontSize: 18,\n  fontFamily: 'Garamond',\n  color: 'black',\n  height: 35,\n  // alignText: 'center', \n  //padding: '0 20px',\n  textAlign: 'center'\n};\nvar paper = {\n  textAlign: 'center'\n};\n\nvar maquinaprofile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(maquinaprofile, _Component);\n\n  function maquinaprofile(props) {\n    var _this;\n\n    _classCallCheck(this, maquinaprofile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(maquinaprofile).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (input) {\n      console.log(\"Input changed\", input);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyPress\", function (button) {\n      console.log(\"Button pressed\", button);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (input) {\n      console.log(\"Input changed\", input);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyPress\", function (button) {\n      console.log(\"Button pressed\", button);\n    });\n\n    var datamaquina = _this.props.maquina;\n    _this.state = {\n      queryval: _this.props.queryval,\n      maquina: datamaquina,\n      saldomaquina: \"0\"\n    };\n\n    _this._loadSaldo();\n\n    return _this;\n  }\n\n  _createClass(maquinaprofile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (window) {\n        import(\"react-simple-keyboard\").then(function (KeyboardClass) {\n          var Keyboard = KeyboardClass[\"default\"];\n          var onChange = _this2.onChange,\n              onKeyPress = _this2.onKeyPress;\n          _this2.keyboard = new Keyboard({\n            onChange: onChange,\n            onKeyPress: onKeyPress\n          });\n        });\n      }\n    }\n  }, {\n    key: \"_loadSaldo\",\n    value: function _loadSaldo() {\n      var res, data, numeral;\n      return _regeneratorRuntime.async(function _loadSaldo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:8081/transaccion/suma/'));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              console.log(\"data\" + data); //console.log(`Show data fetched. Count: ${data.length}`  );\n\n              numeral = require('numeral');\n              this.setState({\n                saldomaquina: numeral(data).format('0,0') // une autre sintaxys  films: this.state.films.concat(data.results)\n                // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\n\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.maquina[0].nombre);\n      console.log(\"Saldo\" + this.state.saldomaquina);\n      return __jsx(PlantillaG, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3,\n        alignItems: \"center\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, __jsx(Paper, {\n        style: paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, __jsx(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, __jsx(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Nombre Maquina :\"), __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        readOnly: true,\n        type: \"text\",\n        style: textinputdisabled,\n        value: this.state.maquina[0].nombre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Ip Maquina :\"), __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        readOnly: true,\n        type: \"text\",\n        style: textinputdisabled,\n        value: this.state.maquina[0].ip_maquina,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"N\\xB0 Tarjetas disponibles :\"), __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        readOnly: true,\n        type: \"text\",\n        style: textinputdisabled,\n        value: this.state.maquina[0].n_tarjetas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))))))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, __jsx(Paper, {\n        style: paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"  $ \", this.state.saldomaquina, \" COP   \"), __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"El saldo actual de la maquina es :\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, __jsx(Paper, {\n        style: paper,\n        className: \"paper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"xs=6\"))), __jsx(Keyboard, {\n        onChange: this.onChange,\n        onKeyPress: this.onKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return maquinaprofile;\n}(Component);\n\nmaquinaprofile.getInitialProps = function _callee(_ref) {\n  var query, store, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          query = _ref.query, store = _ref.store;\n          //const res = await fetch('http://localhost:8080/users/'+ query.id);\n          //const data = await res.json();\n          // console.log('https://winged-pen-261210.appspot.com/users/'+ query.id)\n          console.log(query.nombre);\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:8081/maquinas/' + query.nombre));\n\n        case 4:\n          res = _context2.sent;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            queryval: query.id,\n            maquina: data\n          });\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nexport default connect(function (state) {\n  return state;\n})(maquinaprofile);","map":{"version":3,"sources":["C:/Users/p/NextJsKiosco/pages/maquina/[nombre].js"],"names":["React","Component","connect","Router","PlantillaG","fetch","Paper","Grid","Keyboard","textinputdisabled","background","borderRadius","fontSize","fontFamily","color","height","textAlign","paper","maquinaprofile","props","input","console","log","button","datamaquina","maquina","state","queryval","saldomaquina","_loadSaldo","window","then","KeyboardClass","onChange","onKeyPress","keyboard","res","json","data","numeral","require","setState","format","nombre","ip_maquina","n_tarjetas","getInitialProps","query","store","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Router from 'next/router'\r\nimport PlantillaG from '../../componentes/PlantillaG';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport '../../componentes/styles/nombre.scss'\r\nimport Keyboard from 'react-simple-keyboard';\r\n//import '../../componentes/styles/index.css'\r\n\r\nconst textinputdisabled = {\r\n    background: '#e0e0e0',\r\n    borderRadius: 3,\r\n    fontSize: 18,\r\n    fontFamily: 'Garamond',\r\n    color: 'black',\r\n    height: 35,\r\n   // alignText: 'center', \r\n    //padding: '0 20px',\r\n    textAlign: 'center'\r\n   \r\n   \r\n  }\r\n  const paper = {\r\n      textAlign: 'center',\r\n\r\n  }\r\nclass maquinaprofile extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        let datamaquina = this.props.maquina\r\n        this.state = {\r\n         \r\n            queryval : this.props.queryval,\r\n            maquina : datamaquina,\r\n            saldomaquina : \"0\"\r\n        }\r\n        this._loadSaldo()\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window) {\r\n          import(\"react-simple-keyboard\").then(KeyboardClass => {\r\n            const Keyboard = KeyboardClass.default\r\n            const { onChange, onKeyPress } = this;\r\n    \r\n            this.keyboard = new Keyboard({ onChange, onKeyPress });\r\n          })\r\n        }\r\n      }\r\n    \r\n    onChange = (input) => {\r\n        console.log(\"Input changed\", input);\r\n      }\r\n    \r\n      onKeyPress = (button) => {\r\n        console.log(\"Button pressed\", button);\r\n      }\r\n    \r\n   async _loadSaldo(){\r\n   \r\n        const res = await fetch('http://localhost:8081/transaccion/suma/');\r\n        const data = await res.json();\r\n        console.log(\"data\" + data)\r\n        //console.log(`Show data fetched. Count: ${data.length}`  );\r\n        var numeral = require('numeral');\r\n     \r\n        this.setState(\r\n          { \r\n            saldomaquina: numeral(data).format('0,0'),  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n           // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n         \r\n           \r\n          }\r\n        )\r\n\r\n    }\r\n    onChange = (input) => {\r\n        console.log(\"Input changed\", input);\r\n      }\r\n    \r\n      onKeyPress = (button) => {\r\n        console.log(\"Button pressed\", button);\r\n      }\r\n    render() {\r\n        console.log(this.state.maquina[0].nombre)\r\n        console.log(\"Saldo\" + this.state.saldomaquina)\r\n        return (\r\n           \r\n            <PlantillaG>\r\n   \r\n      <Grid container spacing={3}\r\n  \r\n  alignItems=\"center\"\r\n  justify=\"center\">\r\n      <Grid item xs={12}>\r\n      <Paper style={paper}>\r\n        <table>\r\n            <tbody>           \r\n                <tr>\r\n               <th>\r\n                   Nombre Maquina : \r\n               </th>\r\n               <th>\r\n               <input readOnly  type=\"text\" style={textinputdisabled}  value={this.state.maquina[0].nombre}  />\r\n                \r\n               </th>\r\n           </tr>\r\n           <tr>\r\n               <th>\r\n                   Ip Maquina : \r\n               </th>\r\n               <th>\r\n               <input readOnly  type=\"text\" style={textinputdisabled} value={this.state.maquina[0].ip_maquina}  />\r\n                \r\n               </th>\r\n           </tr>\r\n           <tr>\r\n               <th>\r\n                   N° Tarjetas disponibles : \r\n               </th>\r\n               <th>\r\n               <input readOnly  type=\"text\" style={textinputdisabled} value={this.state.maquina[0].n_tarjetas}  />\r\n                \r\n               </th>\r\n           </tr>\r\n           </tbody>\r\n\r\n        </table>\r\n      </Paper>\r\n      </Grid>\r\n\r\n\r\n\r\n      <Grid item xs={6}>\r\n        <Paper style={paper}>\r\n          <h2>  $ {this.state.saldomaquina} COP   </h2>\r\n       \r\n         <h4>El saldo actual de la maquina es :</h4>\r\n      </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={paper} className=\"paper\">xs=6</Paper>\r\n\r\n        </Grid>\r\n      </Grid>\r\n      <Keyboard\r\n        onChange={this.onChange}\r\n        onKeyPress={this.onKeyPress}\r\n      />\r\n            </PlantillaG>\r\n        \r\n        \r\n        );\r\n    }\r\n\r\n   \r\n}\r\nmaquinaprofile.getInitialProps = async({ query,store}) => {\r\n  \r\n    //const res = await fetch('http://localhost:8080/users/'+ query.id);\r\n    //const data = await res.json();\r\n   // console.log('https://winged-pen-261210.appspot.com/users/'+ query.id)\r\n      console.log(query.nombre);\r\n      const res = await fetch('http://localhost:8081/maquinas/' + query.nombre);\r\n      const data = await res.json();\r\n      \r\n      //console.log(`Show data fetched. Count: ${data.length}`  );\r\n      \r\n   \r\n     \r\n      return{\r\n        queryval:query.id,\r\n        maquina :data\r\n      }\r\n      \r\n  }\r\n  \r\nexport default connect(\r\n    (state) => state) (maquinaprofile)"]},"metadata":{},"sourceType":"module"}